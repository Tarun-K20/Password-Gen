import string
import random

def generate_password(length=9, use_uppercase=True, use_lowercase=True, use_digits=True, use_special=True):
    if length < 1:
        raise ValueError("Password length must be at least 1")

    # Define different character sets based on preferences
    uppercase = string.ascii_uppercase if use_uppercase else ''
    lowercase = string.ascii_lowercase if use_lowercase else ''
    digits = string.digits if use_digits else ''
    special = string.punctuation if use_special else ''

    # Combine all character sets
    all_characters = uppercase + lowercase + digits + special

    if not all_characters:
        raise ValueError("At least one character set must be selected")

    # Begin password with at least one character from each selected set
    password = []
    if use_uppercase:
        password.append(random.choice(uppercase))
    if use_lowercase:
        password.append(random.choice(lowercase))
    if use_digits:
        password.append(random.choice(digits))
    if use_special:
        password.append(random.choice(special))

    # Fill the rest of the password length with random choices 
    password.extend(random.choice(all_characters) for _ in range(length - len(password)))

    # Shuffle the result to ensure randomness
    random.shuffle(password)

    return ''.join(password)

# Example usage:
if __name__ == "__main__":
    length = int(input("Enter the desired password length: "))
    use_uppercase = input("Include uppercase letters? (yes/no): ").strip().lower() == 'yes'
    use_lowercase = input("Include lowercase letters? (yes/no): ").strip().lower() == 'yes'
    use_digits = input("Include digits? (yes/no): ").strip().lower() == 'yes'
    use_special = input("Include special characters? (yes/no): ").strip().lower() == 'yes'

    password = generate_password(length, use_uppercase, use_lowercase, use_digits, use_special)
    print(f"Generated password: {password}")
